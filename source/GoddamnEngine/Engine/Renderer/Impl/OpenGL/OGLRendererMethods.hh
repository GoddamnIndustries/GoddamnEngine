//////////////////////////////////////////////////////////////////////////
/// OGLRendererMethods.hh - OpenGL methods declarations.
/// Copyright (C) $(GODDAMN_DEV) 2011 - Present. All Rights Reserved.
/// 
/// History:
///		* Generated by OGLRendererMethodsGen.sh script. 
///       Please, do not edit manually.
//////////////////////////////////////////////////////////////////////////

#if (!defined(GD_ENGINE_RENDERER_IMPL_OGL_RENDERER))
#	error 'This header should be included inside "OGLRenderer.h"'
#endif	// if (!defined(GD_ENGINE_RENDERER_IMPL_OGL_RENDERER))

#define GD_DEFINE_OGL_METHOD_GLUE_ARGS(...) \
	__VA_ARGS__

#define GD_DEFINE_OGL_METHOD_DEFINITION(ReturnType, MethodName, ArgumentsDeclarations, ArgumentsPassing) \
	private: \
		ReturnType (* _##MethodName)(ArgumentsDeclarations) = nullptr; \
	public: \
		GDINL ReturnType MethodName(ArgumentsDeclarations) const { \
			return self->_##MethodName(ArgumentsPassing); \
		}

#define GD_DEFINE_OGL_METHOD_LINKED(ReturnType, MethodName, ArgumentsDeclarations, ArgumentsPassing) \
	public: \
		GDINL static ReturnType MethodName(ArgumentsDeclarations) { \
			return ::gl##MethodName(ArgumentsPassing); \
		}

#if (!defined(GD_DEFINE_OGL_METHOD))
#	if (!defined(GD_HRI_OGL_ES)) 
#		define GD_DEFINE_OGL_METHOD(ReturnType, MethodName, ArgumentsDeclarations, ArgumentsPassing) GD_DEFINE_OGL_METHOD_DEFINITION(ReturnType, MethodName, ArgumentsDeclarations, ArgumentsPassing)
#	else	// if (!defined(IE_HRI_OGL_ES))
#		define GD_DEFINE_OGL_METHOD(ReturnType, MethodName, ArgumentsDeclarations, ArgumentsPassing) GD_DEFINE_OGL_METHOD_LINKED(ReturnType, MethodName, ArgumentsDeclarations, ArgumentsPassing)
#	endif	// if (!defined(IE_HRI_OGL_ES))
#endif	// if (!defined(GD_HRI_OGL_METHOD_DECL))

#define GD_DEFINE_OGL_METHOD_0(ReturnType, MethodName) \
	GD_DEFINE_OGL_METHOD(ReturnType, MethodName, \
		GD_DEFINE_OGL_METHOD_GLUE_ARGS(), \
		GD_DEFINE_OGL_METHOD_GLUE_ARGS() \
		)

#define GD_DEFINE_OGL_METHOD_1(ReturnType, MethodName, T0, A0) \
	GD_DEFINE_OGL_METHOD(ReturnType, MethodName, \
		GD_DEFINE_OGL_METHOD_GLUE_ARGS(T0 A0), \
		GD_DEFINE_OGL_METHOD_GLUE_ARGS(A0) \
		)

#define GD_DEFINE_OGL_METHOD_2(ReturnType, MethodName, T0, A0, T1, A1) \
	GD_DEFINE_OGL_METHOD(ReturnType, MethodName, \
		GD_DEFINE_OGL_METHOD_GLUE_ARGS(T0 A0, T1 A1), \
		GD_DEFINE_OGL_METHOD_GLUE_ARGS(A0, A1) \
		)

#define GD_DEFINE_OGL_METHOD_3(ReturnType, MethodName, T0, A0, T1, A1, T2, A2) \
	GD_DEFINE_OGL_METHOD(ReturnType, MethodName, \
		GD_DEFINE_OGL_METHOD_GLUE_ARGS(T0 A0, T1 A1, T2 A2), \
		GD_DEFINE_OGL_METHOD_GLUE_ARGS(A0, A1, A2) \
		)

#define GD_DEFINE_OGL_METHOD_4(ReturnType, MethodName, T0, A0, T1, A1, T2, A2, T3, A3) \
	GD_DEFINE_OGL_METHOD(ReturnType, MethodName, \
		GD_DEFINE_OGL_METHOD_GLUE_ARGS(T0 A0, T1 A1, T2 A2, T3 A3), \
		GD_DEFINE_OGL_METHOD_GLUE_ARGS(A0, A1, A2, A3) \
		)

#define GD_DEFINE_OGL_METHOD_5(ReturnType, MethodName, T0, A0, T1, A1, T2, A2, T3, A3, T4, A4) \
	GD_DEFINE_OGL_METHOD(ReturnType, MethodName, \
		GD_DEFINE_OGL_METHOD_GLUE_ARGS(T0 A0, T1 A1, T2 A2, T3 A3, T4 A4), \
		GD_DEFINE_OGL_METHOD_GLUE_ARGS(A0, A1, A2, A3, A4) \
		)

#define GD_DEFINE_OGL_METHOD_6(ReturnType, MethodName, T0, A0, T1, A1, T2, A2, T3, A3, T4, A4, T5, A5) \
	GD_DEFINE_OGL_METHOD(ReturnType, MethodName, \
		GD_DEFINE_OGL_METHOD_GLUE_ARGS(T0 A0, T1 A1, T2 A2, T3 A3, T4 A4, T5 A5), \
		GD_DEFINE_OGL_METHOD_GLUE_ARGS(A0, A1, A2, A3, A4, A5) \
		)

#define GD_DEFINE_OGL_METHOD_7(ReturnType, MethodName, T0, A0, T1, A1, T2, A2, T3, A3, T4, A4, T5, A5, T6, A6) \
	GD_DEFINE_OGL_METHOD(ReturnType, MethodName, \
		GD_DEFINE_OGL_METHOD_GLUE_ARGS(T0 A0, T1 A1, T2 A2, T3 A3, T4 A4, T5 A5, T6 A6), \
		GD_DEFINE_OGL_METHOD_GLUE_ARGS(A0, A1, A2, A3, A4, A5, A6) \
		)

#define GD_DEFINE_OGL_METHOD_8(ReturnType, MethodName, T0, A0, T1, A1, T2, A2, T3, A3, T4, A4, T5, A5, T6, A6, T7, A7) \
	GD_DEFINE_OGL_METHOD(ReturnType, MethodName, \
		GD_DEFINE_OGL_METHOD_GLUE_ARGS(T0 A0, T1 A1, T2 A2, T3 A3, T4 A4, T5 A5, T6 A6, T7 A7), \
		GD_DEFINE_OGL_METHOD_GLUE_ARGS(A0, A1, A2, A3, A4, A5, A6, A7) \
		)

#define GD_DEFINE_OGL_METHOD_9(ReturnType, MethodName, T0, A0, T1, A1, T2, A2, T3, A3, T4, A4, T5, A5, T6, A6, T7, A7, T8, A8) \
	GD_DEFINE_OGL_METHOD(ReturnType, MethodName, \
		GD_DEFINE_OGL_METHOD_GLUE_ARGS(T0 A0, T1 A1, T2 A2, T3 A3, T4 A4, T5 A5, T6 A6, T7 A7, T8 A8), \
		GD_DEFINE_OGL_METHOD_GLUE_ARGS(A0, A1, A2, A3, A4, A5, A6, A7, A8) \
		)

#define GD_DEFINE_OGL_METHOD_10(ReturnType, MethodName, T0, A0, T1, A1, T2, A2, T3, A3, T4, A4, T5, A5, T6, A6, T7, A7, T8, A8, T9, A9) \
	GD_DEFINE_OGL_METHOD(ReturnType, MethodName, \
		GD_DEFINE_OGL_METHOD_GLUE_ARGS(T0 A0, T1 A1, T2 A2, T3 A3, T4 A4, T5 A5, T6 A6, T7 A7, T8 A8, T9 A9), \
		GD_DEFINE_OGL_METHOD_GLUE_ARGS(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9) \
		)
		
#define GD_DEFINE_OGL_METHOD_11(ReturnType, MethodName, T0, A0, T1, A1, T2, A2, T3, A3, T4, A4, T5, A5, T6, A6, T7, A7, T8, A8, T9, A9, T10, A10) \
	GD_DEFINE_OGL_METHOD(ReturnType, MethodName, \
		GD_DEFINE_OGL_METHOD_GLUE_ARGS(T0 A0, T1 A1, T2 A2, T3 A3, T4 A4, T5 A5, T6 A6, T7 A7, T8 A8, T9 A9, T10 A10), \
		GD_DEFINE_OGL_METHOD_GLUE_ARGS(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10) \
		)

//////////////////////////////////////////////////////////////////////////
// Some OpenGL <-> Goddamn coding style conversions.
//////////////////////////////////////////////////////////////////////////

#ifndef GD_ENGINE_RENDERER_IMPL_OGL
#define GD_ENGINE_RENDERER_IMPL_OGL
#	define GL_GetError glGetError
#endif

//////////////////////////////////////////////////////////////////////////
// OpenGL <-> Functionality
//////////////////////////////////////////////////////////////////////////


// void glActiveTexture(GLenum texture)
GD_DEFINE_OGL_METHOD_1(
	void, ActiveTexture,
	GLenum const, texture
	)

// void glAttachShader(GLuint program, GLuint shader)
GD_DEFINE_OGL_METHOD_2(
	void, AttachShader,
	GLuint const, program,
	GLuint const, shader
	)

// void glBindAttribLocation(GLuint program, GLuint index, const GLchar* name)
GD_DEFINE_OGL_METHOD_3(
	void, BindAttribLocation,
	GLuint const, program,
	GLuint const, index,
	const GLchar* const, name
	)

// void glBindBuffer(GLenum target, GLuint buffer)
GD_DEFINE_OGL_METHOD_2(
	void, BindBuffer,
	GLenum const, target,
	GLuint const, buffer
	)

// void glBindFramebuffer(GLenum target, GLuint framebuffer)
GD_DEFINE_OGL_METHOD_2(
	void, BindFramebuffer,
	GLenum const, target,
	GLuint const, framebuffer
	)

// void glBindRenderbuffer(GLenum target, GLuint renderbuffer)
GD_DEFINE_OGL_METHOD_2(
	void, BindRenderbuffer,
	GLenum const, target,
	GLuint const, renderbuffer
	)

// void glBindTexture(GLenum target, GLuint texture)
GD_DEFINE_OGL_METHOD_2(
	void, BindTexture,
	GLenum const, target,
	GLuint const, texture
	)

// void glBlendColor(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha)
GD_DEFINE_OGL_METHOD_4(
	void, BlendColor,
	GLfloat const, red,
	GLfloat const, green,
	GLfloat const, blue,
	GLfloat const, alpha
	)

// void glBlendEquation(GLenum mode)
GD_DEFINE_OGL_METHOD_1(
	void, BlendEquation,
	GLenum const, mode
	)

// void glBlendEquationSeparate(GLenum modeRGB, GLenum modeAlpha)
GD_DEFINE_OGL_METHOD_2(
	void, BlendEquationSeparate,
	GLenum const, modeRGB,
	GLenum const, modeAlpha
	)

// void glBlendFunc(GLenum sfactor, GLenum dfactor)
GD_DEFINE_OGL_METHOD_2(
	void, BlendFunc,
	GLenum const, sfactor,
	GLenum const, dfactor
	)

// void glBlendFuncSeparate(GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha)
GD_DEFINE_OGL_METHOD_4(
	void, BlendFuncSeparate,
	GLenum const, srcRGB,
	GLenum const, dstRGB,
	GLenum const, srcAlpha,
	GLenum const, dstAlpha
	)

// void glBufferData(GLenum target, GLsizeiptr size, const GLvoid* data, GLenum usage)
GD_DEFINE_OGL_METHOD_4(
	void, BufferData,
	GLenum const, target,
	GLsizeiptr const, size,
	const GLvoid* const, data,
	GLenum const, usage
	)

// void glBufferSubData(GLenum target, GLintptr offset, GLsizeiptr size, const GLvoid* data)
GD_DEFINE_OGL_METHOD_4(
	void, BufferSubData,
	GLenum const, target,
	GLintptr const, offset,
	GLsizeiptr const, size,
	const GLvoid* const, data
	)

// GLenum glCheckFramebufferStatus(GLenum target)
GD_DEFINE_OGL_METHOD_1(
	GLenum, CheckFramebufferStatus,
	GLenum const, target
	)

// void glClear(GLbitfield mask)
GD_DEFINE_OGL_METHOD_1(
	void, Clear,
	GLbitfield const, mask
	)

// void glClearColor(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha)
GD_DEFINE_OGL_METHOD_4(
	void, ClearColor,
	GLfloat const, red,
	GLfloat const, green,
	GLfloat const, blue,
	GLfloat const, alpha
	)

// void glClearDepthf(GLfloat depth)
GD_DEFINE_OGL_METHOD_1(
	void, ClearDepthf,
	GLfloat const, depth
	)

// void glClearStencil(GLint s)
GD_DEFINE_OGL_METHOD_1(
	void, ClearStencil,
	GLint const, s
	)

// void glColorMask(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha)
GD_DEFINE_OGL_METHOD_4(
	void, ColorMask,
	GLboolean const, red,
	GLboolean const, green,
	GLboolean const, blue,
	GLboolean const, alpha
	)

// void glCompileShader(GLuint shader)
GD_DEFINE_OGL_METHOD_1(
	void, CompileShader,
	GLuint const, shader
	)

// void glCompressedTexImage2D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid* data)
GD_DEFINE_OGL_METHOD_8(
	void, CompressedTexImage2D,
	GLenum const, target,
	GLint const, level,
	GLenum const, internalformat,
	GLsizei const, width,
	GLsizei const, height,
	GLint const, border,
	GLsizei const, imageSize,
	const GLvoid* const, data
	)

// void glCompressedTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid* data)
GD_DEFINE_OGL_METHOD_9(
	void, CompressedTexSubImage2D,
	GLenum const, target,
	GLint const, level,
	GLint const, xoffset,
	GLint const, yoffset,
	GLsizei const, width,
	GLsizei const, height,
	GLenum const, format,
	GLsizei const, imageSize,
	const GLvoid* const, data
	)

// void glCopyTexImage2D(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border)
GD_DEFINE_OGL_METHOD_8(
	void, CopyTexImage2D,
	GLenum const, target,
	GLint const, level,
	GLenum const, internalformat,
	GLint const, x,
	GLint const, y,
	GLsizei const, width,
	GLsizei const, height,
	GLint const, border
	)

// void glCopyTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height)
GD_DEFINE_OGL_METHOD_8(
	void, CopyTexSubImage2D,
	GLenum const, target,
	GLint const, level,
	GLint const, xoffset,
	GLint const, yoffset,
	GLint const, x,
	GLint const, y,
	GLsizei const, width,
	GLsizei const, height
	)

// GLuint glCreateProgram(void)
GD_DEFINE_OGL_METHOD_0(
	GLuint, CreateProgram
	)

// GLuint glCreateShader(GLenum type)
GD_DEFINE_OGL_METHOD_1(
	GLuint, CreateShader,
	GLenum const, type
	)

// void glCullFace(GLenum mode)
GD_DEFINE_OGL_METHOD_1(
	void, CullFace,
	GLenum const, mode
	)

// void glDeleteBuffers(GLsizei n, const GLuint* buffers)
GD_DEFINE_OGL_METHOD_2(
	void, DeleteBuffers,
	GLsizei const, n,
	const GLuint* const, buffers
	)

// void glDeleteFramebuffers(GLsizei n, const GLuint* framebuffers)
GD_DEFINE_OGL_METHOD_2(
	void, DeleteFramebuffers,
	GLsizei const, n,
	const GLuint* const, framebuffers
	)

// void glDeleteProgram(GLuint program)
GD_DEFINE_OGL_METHOD_1(
	void, DeleteProgram,
	GLuint const, program
	)

// void glDeleteRenderbuffers(GLsizei n, const GLuint* renderbuffers)
GD_DEFINE_OGL_METHOD_2(
	void, DeleteRenderbuffers,
	GLsizei const, n,
	const GLuint* const, renderbuffers
	)

// void glDeleteShader(GLuint shader)
GD_DEFINE_OGL_METHOD_1(
	void, DeleteShader,
	GLuint const, shader
	)

// void glDeleteTextures(GLsizei n, const GLuint* textures)
GD_DEFINE_OGL_METHOD_2(
	void, DeleteTextures,
	GLsizei const, n,
	const GLuint* const, textures
	)

// void glDepthFunc(GLenum func)
GD_DEFINE_OGL_METHOD_1(
	void, DepthFunc,
	GLenum const, func
	)

// void glDepthMask(GLboolean flag)
GD_DEFINE_OGL_METHOD_1(
	void, DepthMask,
	GLboolean const, flag
	)

// void glDepthRangef(GLfloat n, GLfloat f)
GD_DEFINE_OGL_METHOD_2(
	void, DepthRangef,
	GLfloat const, n,
	GLfloat const, f
	)

// void glDetachShader(GLuint program, GLuint shader)
GD_DEFINE_OGL_METHOD_2(
	void, DetachShader,
	GLuint const, program,
	GLuint const, shader
	)

// void glDisable(GLenum cap)
GD_DEFINE_OGL_METHOD_1(
	void, Disable,
	GLenum const, cap
	)

// void glDisableVertexAttribArray(GLuint index)
GD_DEFINE_OGL_METHOD_1(
	void, DisableVertexAttribArray,
	GLuint const, index
	)

// void glDrawArrays(GLenum mode, GLint first, GLsizei count)
GD_DEFINE_OGL_METHOD_3(
	void, DrawArrays,
	GLenum const, mode,
	GLint const, first,
	GLsizei const, count
	)

// void glDrawElements(GLenum mode, GLsizei count, GLenum type, const GLvoid* indices)
GD_DEFINE_OGL_METHOD_4(
	void, DrawElements,
	GLenum const, mode,
	GLsizei const, count,
	GLenum const, type,
	const GLvoid* const, indices
	)

// void glEnable(GLenum cap)
GD_DEFINE_OGL_METHOD_1(
	void, Enable,
	GLenum const, cap
	)

// void glEnableVertexAttribArray(GLuint index)
GD_DEFINE_OGL_METHOD_1(
	void, EnableVertexAttribArray,
	GLuint const, index
	)

// void glFinish(void)
GD_DEFINE_OGL_METHOD_0(
	void, Finish
	)

// void glFlush(void)
GD_DEFINE_OGL_METHOD_0(
	void, Flush
	)

// void glFramebufferRenderbuffer(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer)
GD_DEFINE_OGL_METHOD_4(
	void, FramebufferRenderbuffer,
	GLenum const, target,
	GLenum const, attachment,
	GLenum const, renderbuffertarget,
	GLuint const, renderbuffer
	)

// void glFramebufferTexture2D(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level)
GD_DEFINE_OGL_METHOD_5(
	void, FramebufferTexture2D,
	GLenum const, target,
	GLenum const, attachment,
	GLenum const, textarget,
	GLuint const, texture,
	GLint const, level
	)

// void glFrontFace(GLenum mode)
GD_DEFINE_OGL_METHOD_1(
	void, FrontFace,
	GLenum const, mode
	)

// void glGenBuffers(GLsizei n, GLuint* buffers)
GD_DEFINE_OGL_METHOD_2(
	void, GenBuffers,
	GLsizei const, n,
	GLuint* const, buffers
	)

// void glGenerateMipmap(GLenum target)
GD_DEFINE_OGL_METHOD_1(
	void, GenerateMipmap,
	GLenum const, target
	)

// void glGenFramebuffers(GLsizei n, GLuint* framebuffers)
GD_DEFINE_OGL_METHOD_2(
	void, GenFramebuffers,
	GLsizei const, n,
	GLuint* const, framebuffers
	)

// void glGenRenderbuffers(GLsizei n, GLuint* renderbuffers)
GD_DEFINE_OGL_METHOD_2(
	void, GenRenderbuffers,
	GLsizei const, n,
	GLuint* const, renderbuffers
	)

// void glGenTextures(GLsizei n, GLuint* textures)
GD_DEFINE_OGL_METHOD_2(
	void, GenTextures,
	GLsizei const, n,
	GLuint* const, textures
	)

// void glGetActiveAttrib(GLuint program, GLuint index, GLsizei bufsize, GLsizei* length, GLint* size, GLenum* type, GLchar* name)
GD_DEFINE_OGL_METHOD_7(
	void, GetActiveAttrib,
	GLuint const, program,
	GLuint const, index,
	GLsizei const, bufsize,
	GLsizei* const, length,
	GLint* const, size,
	GLenum* const, type,
	GLchar* const, name
	)

// void glGetActiveUniform(GLuint program, GLuint index, GLsizei bufsize, GLsizei* length, GLint* size, GLenum* type, GLchar* name)
GD_DEFINE_OGL_METHOD_7(
	void, GetActiveUniform,
	GLuint const, program,
	GLuint const, index,
	GLsizei const, bufsize,
	GLsizei* const, length,
	GLint* const, size,
	GLenum* const, type,
	GLchar* const, name
	)

// void glGetAttachedShaders(GLuint program, GLsizei maxcount, GLsizei* count, GLuint* shaders)
GD_DEFINE_OGL_METHOD_4(
	void, GetAttachedShaders,
	GLuint const, program,
	GLsizei const, maxcount,
	GLsizei* const, count,
	GLuint* const, shaders
	)

// GLint glGetAttribLocation(GLuint program, const GLchar* name)
GD_DEFINE_OGL_METHOD_2(
	GLint, GetAttribLocation,
	GLuint const, program,
	const GLchar* const, name
	)

// void glGetBooleanv(GLenum pname, GLboolean* params)
GD_DEFINE_OGL_METHOD_2(
	void, GetBooleanv,
	GLenum const, pname,
	GLboolean* const, params
	)

// void glGetBufferParameteriv(GLenum target, GLenum pname, GLint* params)
GD_DEFINE_OGL_METHOD_3(
	void, GetBufferParameteriv,
	GLenum const, target,
	GLenum const, pname,
	GLint* const, params
	)

// GLenum glGetError(void)
GD_DEFINE_OGL_METHOD_0(
	GLenum, GetError
	)

// void glGetFloatv(GLenum pname, GLfloat* params)
GD_DEFINE_OGL_METHOD_2(
	void, GetFloatv,
	GLenum const, pname,
	GLfloat* const, params
	)

// void glGetFramebufferAttachmentParameteriv(GLenum target, GLenum attachment, GLenum pname, GLint* params)
GD_DEFINE_OGL_METHOD_4(
	void, GetFramebufferAttachmentParameteriv,
	GLenum const, target,
	GLenum const, attachment,
	GLenum const, pname,
	GLint* const, params
	)

// void glGetIntegerv(GLenum pname, GLint* params)
GD_DEFINE_OGL_METHOD_2(
	void, GetIntegerv,
	GLenum const, pname,
	GLint* const, params
	)

// void glGetProgramiv(GLuint program, GLenum pname, GLint* params)
GD_DEFINE_OGL_METHOD_3(
	void, GetProgramiv,
	GLuint const, program,
	GLenum const, pname,
	GLint* const, params
	)

// void glGetProgramInfoLog(GLuint program, GLsizei bufsize, GLsizei* length, GLchar* infolog)
GD_DEFINE_OGL_METHOD_4(
	void, GetProgramInfoLog,
	GLuint const, program,
	GLsizei const, bufsize,
	GLsizei* const, length,
	GLchar* const, infolog
	)

// void glGetRenderbufferParameteriv(GLenum target, GLenum pname, GLint* params)
GD_DEFINE_OGL_METHOD_3(
	void, GetRenderbufferParameteriv,
	GLenum const, target,
	GLenum const, pname,
	GLint* const, params
	)

// void glGetShaderiv(GLuint shader, GLenum pname, GLint* params)
GD_DEFINE_OGL_METHOD_3(
	void, GetShaderiv,
	GLuint const, shader,
	GLenum const, pname,
	GLint* const, params
	)

// void glGetShaderInfoLog(GLuint shader, GLsizei bufsize, GLsizei* length, GLchar* infolog)
GD_DEFINE_OGL_METHOD_4(
	void, GetShaderInfoLog,
	GLuint const, shader,
	GLsizei const, bufsize,
	GLsizei* const, length,
	GLchar* const, infolog
	)

// void glGetShaderPrecisionFormat(GLenum shadertype, GLenum precisiontype, GLint* range, GLint* precision)
GD_DEFINE_OGL_METHOD_4(
	void, GetShaderPrecisionFormat,
	GLenum const, shadertype,
	GLenum const, precisiontype,
	GLint* const, range,
	GLint* const, precision
	)

// void glGetShaderSource(GLuint shader, GLsizei bufsize, GLsizei* length, GLchar* source)
GD_DEFINE_OGL_METHOD_4(
	void, GetShaderSource,
	GLuint const, shader,
	GLsizei const, bufsize,
	GLsizei* const, length,
	GLchar* const, source
	)

// const GLubyte* glGetString(GLenum name)
GD_DEFINE_OGL_METHOD_1(
	const GLubyte*, GetString,
	GLenum const, name
	)

// void glGetTexParameterfv(GLenum target, GLenum pname, GLfloat* params)
GD_DEFINE_OGL_METHOD_3(
	void, GetTexParameterfv,
	GLenum const, target,
	GLenum const, pname,
	GLfloat* const, params
	)

// void glGetTexParameteriv(GLenum target, GLenum pname, GLint* params)
GD_DEFINE_OGL_METHOD_3(
	void, GetTexParameteriv,
	GLenum const, target,
	GLenum const, pname,
	GLint* const, params
	)

// void glGetUniformfv(GLuint program, GLint location, GLfloat* params)
GD_DEFINE_OGL_METHOD_3(
	void, GetUniformfv,
	GLuint const, program,
	GLint const, location,
	GLfloat* const, params
	)

// void glGetUniformiv(GLuint program, GLint location, GLint* params)
GD_DEFINE_OGL_METHOD_3(
	void, GetUniformiv,
	GLuint const, program,
	GLint const, location,
	GLint* const, params
	)

// GLint glGetUniformLocation(GLuint program, const GLchar* name)
GD_DEFINE_OGL_METHOD_2(
	GLint, GetUniformLocation,
	GLuint const, program,
	const GLchar* const, name
	)

// void glGetVertexAttribfv(GLuint index, GLenum pname, GLfloat* params)
GD_DEFINE_OGL_METHOD_3(
	void, GetVertexAttribfv,
	GLuint const, index,
	GLenum const, pname,
	GLfloat* const, params
	)

// void glGetVertexAttribiv(GLuint index, GLenum pname, GLint* params)
GD_DEFINE_OGL_METHOD_3(
	void, GetVertexAttribiv,
	GLuint const, index,
	GLenum const, pname,
	GLint* const, params
	)

// void glGetVertexAttribPointerv(GLuint index, GLenum pname, GLvoid** pointer)
GD_DEFINE_OGL_METHOD_3(
	void, GetVertexAttribPointerv,
	GLuint const, index,
	GLenum const, pname,
	GLvoid** const, pointer
	)

// void glHint(GLenum target, GLenum mode)
GD_DEFINE_OGL_METHOD_2(
	void, Hint,
	GLenum const, target,
	GLenum const, mode
	)

// GLboolean glIsBuffer(GLuint buffer)
GD_DEFINE_OGL_METHOD_1(
	GLboolean, IsBuffer,
	GLuint const, buffer
	)

// GLboolean glIsEnabled(GLenum cap)
GD_DEFINE_OGL_METHOD_1(
	GLboolean, IsEnabled,
	GLenum const, cap
	)

// GLboolean glIsFramebuffer(GLuint framebuffer)
GD_DEFINE_OGL_METHOD_1(
	GLboolean, IsFramebuffer,
	GLuint const, framebuffer
	)

// GLboolean glIsProgram(GLuint program)
GD_DEFINE_OGL_METHOD_1(
	GLboolean, IsProgram,
	GLuint const, program
	)

// GLboolean glIsRenderbuffer(GLuint renderbuffer)
GD_DEFINE_OGL_METHOD_1(
	GLboolean, IsRenderbuffer,
	GLuint const, renderbuffer
	)

// GLboolean glIsShader(GLuint shader)
GD_DEFINE_OGL_METHOD_1(
	GLboolean, IsShader,
	GLuint const, shader
	)

// GLboolean glIsTexture(GLuint texture)
GD_DEFINE_OGL_METHOD_1(
	GLboolean, IsTexture,
	GLuint const, texture
	)

// void glLineWidth(GLfloat width)
GD_DEFINE_OGL_METHOD_1(
	void, LineWidth,
	GLfloat const, width
	)

// void glLinkProgram(GLuint program)
GD_DEFINE_OGL_METHOD_1(
	void, LinkProgram,
	GLuint const, program
	)

// void glPixelStorei(GLenum pname, GLint param)
GD_DEFINE_OGL_METHOD_2(
	void, PixelStorei,
	GLenum const, pname,
	GLint const, param
	)

// void glPolygonOffset(GLfloat factor, GLfloat units)
GD_DEFINE_OGL_METHOD_2(
	void, PolygonOffset,
	GLfloat const, factor,
	GLfloat const, units
	)

// void glReadPixels(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid* pixels)
GD_DEFINE_OGL_METHOD_7(
	void, ReadPixels,
	GLint const, x,
	GLint const, y,
	GLsizei const, width,
	GLsizei const, height,
	GLenum const, format,
	GLenum const, type,
	GLvoid* const, pixels
	)

// void glReleaseShaderCompiler(void)
GD_DEFINE_OGL_METHOD_0(
	void, ReleaseShaderCompiler
	)

// void glRenderbufferStorage(GLenum target, GLenum internalformat, GLsizei width, GLsizei height)
GD_DEFINE_OGL_METHOD_4(
	void, RenderbufferStorage,
	GLenum const, target,
	GLenum const, internalformat,
	GLsizei const, width,
	GLsizei const, height
	)

// void glSampleCoverage(GLfloat value, GLboolean invert)
GD_DEFINE_OGL_METHOD_2(
	void, SampleCoverage,
	GLfloat const, value,
	GLboolean const, invert
	)

// void glScissor(GLint x, GLint y, GLsizei width, GLsizei height)
GD_DEFINE_OGL_METHOD_4(
	void, Scissor,
	GLint const, x,
	GLint const, y,
	GLsizei const, width,
	GLsizei const, height
	)

// void glShaderBinary(GLsizei n, const GLuint* shaders, GLenum binaryformat, const GLvoid* binary, GLsizei length)
GD_DEFINE_OGL_METHOD_5(
	void, ShaderBinary,
	GLsizei const, n,
	const GLuint* const, shaders,
	GLenum const, binaryformat,
	const GLvoid* const, binary,
	GLsizei const, length
	)

// void glShaderSource(GLuint shader, GLsizei count, const GLchar* const* string, const GLint* length)
GD_DEFINE_OGL_METHOD_4(
	void, ShaderSource,
	GLuint const, shader,
	GLsizei const, count,
	const GLchar* const* const, string,
	const GLint* const, length
	)

// void glStencilFunc(GLenum func, GLint ref, GLuint mask)
GD_DEFINE_OGL_METHOD_3(
	void, StencilFunc,
	GLenum const, func,
	GLint const, ref,
	GLuint const, mask
	)

// void glStencilFuncSeparate(GLenum face, GLenum func, GLint ref, GLuint mask)
GD_DEFINE_OGL_METHOD_4(
	void, StencilFuncSeparate,
	GLenum const, face,
	GLenum const, func,
	GLint const, ref,
	GLuint const, mask
	)

// void glStencilMask(GLuint mask)
GD_DEFINE_OGL_METHOD_1(
	void, StencilMask,
	GLuint const, mask
	)

// void glStencilMaskSeparate(GLenum face, GLuint mask)
GD_DEFINE_OGL_METHOD_2(
	void, StencilMaskSeparate,
	GLenum const, face,
	GLuint const, mask
	)

// void glStencilOp(GLenum fail, GLenum zfail, GLenum zpass)
GD_DEFINE_OGL_METHOD_3(
	void, StencilOp,
	GLenum const, fail,
	GLenum const, zfail,
	GLenum const, zpass
	)

// void glStencilOpSeparate(GLenum face, GLenum fail, GLenum zfail, GLenum zpass)
GD_DEFINE_OGL_METHOD_4(
	void, StencilOpSeparate,
	GLenum const, face,
	GLenum const, fail,
	GLenum const, zfail,
	GLenum const, zpass
	)

// void glTexImage2D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid* pixels)
GD_DEFINE_OGL_METHOD_9(
	void, TexImage2D,
	GLenum const, target,
	GLint const, level,
	GLint const, internalformat,
	GLsizei const, width,
	GLsizei const, height,
	GLint const, border,
	GLenum const, format,
	GLenum const, type,
	const GLvoid* const, pixels
	)

// void glTexParameterf(GLenum target, GLenum pname, GLfloat param)
GD_DEFINE_OGL_METHOD_3(
	void, TexParameterf,
	GLenum const, target,
	GLenum const, pname,
	GLfloat const, param
	)

// void glTexParameterfv(GLenum target, GLenum pname, const GLfloat* params)
GD_DEFINE_OGL_METHOD_3(
	void, TexParameterfv,
	GLenum const, target,
	GLenum const, pname,
	const GLfloat* const, params
	)

// void glTexParameteri(GLenum target, GLenum pname, GLint param)
GD_DEFINE_OGL_METHOD_3(
	void, TexParameteri,
	GLenum const, target,
	GLenum const, pname,
	GLint const, param
	)

// void glTexParameteriv(GLenum target, GLenum pname, const GLint* params)
GD_DEFINE_OGL_METHOD_3(
	void, TexParameteriv,
	GLenum const, target,
	GLenum const, pname,
	const GLint* const, params
	)

// void glTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid* pixels)
GD_DEFINE_OGL_METHOD_9(
	void, TexSubImage2D,
	GLenum const, target,
	GLint const, level,
	GLint const, xoffset,
	GLint const, yoffset,
	GLsizei const, width,
	GLsizei const, height,
	GLenum const, format,
	GLenum const, type,
	const GLvoid* const, pixels
	)

// void glUniform1f(GLint location, GLfloat x)
GD_DEFINE_OGL_METHOD_2(
	void, Uniform1f,
	GLint const, location,
	GLfloat const, x
	)

// void glUniform1fv(GLint location, GLsizei count, const GLfloat* v)
GD_DEFINE_OGL_METHOD_3(
	void, Uniform1fv,
	GLint const, location,
	GLsizei const, count,
	const GLfloat* const, v
	)

// void glUniform1i(GLint location, GLint x)
GD_DEFINE_OGL_METHOD_2(
	void, Uniform1i,
	GLint const, location,
	GLint const, x
	)

// void glUniform1iv(GLint location, GLsizei count, const GLint* v)
GD_DEFINE_OGL_METHOD_3(
	void, Uniform1iv,
	GLint const, location,
	GLsizei const, count,
	const GLint* const, v
	)

// void glUniform2f(GLint location, GLfloat x, GLfloat y)
GD_DEFINE_OGL_METHOD_3(
	void, Uniform2f,
	GLint const, location,
	GLfloat const, x,
	GLfloat const, y
	)

// void glUniform2fv(GLint location, GLsizei count, const GLfloat* v)
GD_DEFINE_OGL_METHOD_3(
	void, Uniform2fv,
	GLint const, location,
	GLsizei const, count,
	const GLfloat* const, v
	)

// void glUniform2i(GLint location, GLint x, GLint y)
GD_DEFINE_OGL_METHOD_3(
	void, Uniform2i,
	GLint const, location,
	GLint const, x,
	GLint const, y
	)

// void glUniform2iv(GLint location, GLsizei count, const GLint* v)
GD_DEFINE_OGL_METHOD_3(
	void, Uniform2iv,
	GLint const, location,
	GLsizei const, count,
	const GLint* const, v
	)

// void glUniform3f(GLint location, GLfloat x, GLfloat y, GLfloat z)
GD_DEFINE_OGL_METHOD_4(
	void, Uniform3f,
	GLint const, location,
	GLfloat const, x,
	GLfloat const, y,
	GLfloat const, z
	)

// void glUniform3fv(GLint location, GLsizei count, const GLfloat* v)
GD_DEFINE_OGL_METHOD_3(
	void, Uniform3fv,
	GLint const, location,
	GLsizei const, count,
	const GLfloat* const, v
	)

// void glUniform3i(GLint location, GLint x, GLint y, GLint z)
GD_DEFINE_OGL_METHOD_4(
	void, Uniform3i,
	GLint const, location,
	GLint const, x,
	GLint const, y,
	GLint const, z
	)

// void glUniform3iv(GLint location, GLsizei count, const GLint* v)
GD_DEFINE_OGL_METHOD_3(
	void, Uniform3iv,
	GLint const, location,
	GLsizei const, count,
	const GLint* const, v
	)

// void glUniform4f(GLint location, GLfloat x, GLfloat y, GLfloat z, GLfloat w)
GD_DEFINE_OGL_METHOD_5(
	void, Uniform4f,
	GLint const, location,
	GLfloat const, x,
	GLfloat const, y,
	GLfloat const, z,
	GLfloat const, w
	)

// void glUniform4fv(GLint location, GLsizei count, const GLfloat* v)
GD_DEFINE_OGL_METHOD_3(
	void, Uniform4fv,
	GLint const, location,
	GLsizei const, count,
	const GLfloat* const, v
	)

// void glUniform4i(GLint location, GLint x, GLint y, GLint z, GLint w)
GD_DEFINE_OGL_METHOD_5(
	void, Uniform4i,
	GLint const, location,
	GLint const, x,
	GLint const, y,
	GLint const, z,
	GLint const, w
	)

// void glUniform4iv(GLint location, GLsizei count, const GLint* v)
GD_DEFINE_OGL_METHOD_3(
	void, Uniform4iv,
	GLint const, location,
	GLsizei const, count,
	const GLint* const, v
	)

// void glUniformMatrix2fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat* value)
GD_DEFINE_OGL_METHOD_4(
	void, UniformMatrix2fv,
	GLint const, location,
	GLsizei const, count,
	GLboolean const, transpose,
	const GLfloat* const, value
	)

// void glUniformMatrix3fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat* value)
GD_DEFINE_OGL_METHOD_4(
	void, UniformMatrix3fv,
	GLint const, location,
	GLsizei const, count,
	GLboolean const, transpose,
	const GLfloat* const, value
	)

// void glUniformMatrix4fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat* value)
GD_DEFINE_OGL_METHOD_4(
	void, UniformMatrix4fv,
	GLint const, location,
	GLsizei const, count,
	GLboolean const, transpose,
	const GLfloat* const, value
	)

// void glUseProgram(GLuint program)
GD_DEFINE_OGL_METHOD_1(
	void, UseProgram,
	GLuint const, program
	)

// void glValidateProgram(GLuint program)
GD_DEFINE_OGL_METHOD_1(
	void, ValidateProgram,
	GLuint const, program
	)

// void glVertexAttrib1f(GLuint indx, GLfloat x)
GD_DEFINE_OGL_METHOD_2(
	void, VertexAttrib1f,
	GLuint const, indx,
	GLfloat const, x
	)

// void glVertexAttrib1fv(GLuint indx, const GLfloat* values)
GD_DEFINE_OGL_METHOD_2(
	void, VertexAttrib1fv,
	GLuint const, indx,
	const GLfloat* const, values
	)

// void glVertexAttrib2f(GLuint indx, GLfloat x, GLfloat y)
GD_DEFINE_OGL_METHOD_3(
	void, VertexAttrib2f,
	GLuint const, indx,
	GLfloat const, x,
	GLfloat const, y
	)

// void glVertexAttrib2fv(GLuint indx, const GLfloat* values)
GD_DEFINE_OGL_METHOD_2(
	void, VertexAttrib2fv,
	GLuint const, indx,
	const GLfloat* const, values
	)

// void glVertexAttrib3f(GLuint indx, GLfloat x, GLfloat y, GLfloat z)
GD_DEFINE_OGL_METHOD_4(
	void, VertexAttrib3f,
	GLuint const, indx,
	GLfloat const, x,
	GLfloat const, y,
	GLfloat const, z
	)

// void glVertexAttrib3fv(GLuint indx, const GLfloat* values)
GD_DEFINE_OGL_METHOD_2(
	void, VertexAttrib3fv,
	GLuint const, indx,
	const GLfloat* const, values
	)

// void glVertexAttrib4f(GLuint indx, GLfloat x, GLfloat y, GLfloat z, GLfloat w)
GD_DEFINE_OGL_METHOD_5(
	void, VertexAttrib4f,
	GLuint const, indx,
	GLfloat const, x,
	GLfloat const, y,
	GLfloat const, z,
	GLfloat const, w
	)

// void glVertexAttrib4fv(GLuint indx, const GLfloat* values)
GD_DEFINE_OGL_METHOD_2(
	void, VertexAttrib4fv,
	GLuint const, indx,
	const GLfloat* const, values
	)

// void glVertexAttribPointer(GLuint indx, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid* ptr)
GD_DEFINE_OGL_METHOD_6(
	void, VertexAttribPointer,
	GLuint const, indx,
	GLint const, size,
	GLenum const, type,
	GLboolean const, normalized,
	GLsizei const, stride,
	const GLvoid* const, ptr
	)

// void glViewport(GLint x, GLint y, GLsizei width, GLsizei height)
GD_DEFINE_OGL_METHOD_4(
	void, Viewport,
	GLint const, x,
	GLint const, y,
	GLsizei const, width,
	GLsizei const, height
	)

// void glReadBuffer(GLenum mode)
GD_DEFINE_OGL_METHOD_1(
	void, ReadBuffer,
	GLenum const, mode
	)

// void glDrawRangeElements(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid* indices)
GD_DEFINE_OGL_METHOD_6(
	void, DrawRangeElements,
	GLenum const, mode,
	GLuint const, start,
	GLuint const, end,
	GLsizei const, count,
	GLenum const, type,
	const GLvoid* const, indices
	)

// void glTexImage3D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid* pixels)
GD_DEFINE_OGL_METHOD_10(
	void, TexImage3D,
	GLenum const, target,
	GLint const, level,
	GLint const, internalformat,
	GLsizei const, width,
	GLsizei const, height,
	GLsizei const, depth,
	GLint const, border,
	GLenum const, format,
	GLenum const, type,
	const GLvoid* const, pixels
	)

// void glTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid* pixels)
GD_DEFINE_OGL_METHOD_11(
	void, TexSubImage3D,
	GLenum const, target,
	GLint const, level,
	GLint const, xoffset,
	GLint const, yoffset,
	GLint const, zoffset,
	GLsizei const, width,
	GLsizei const, height,
	GLsizei const, depth,
	GLenum const, format,
	GLenum const, type,
	const GLvoid* const, pixels
	)

// void glCopyTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height)
GD_DEFINE_OGL_METHOD_9(
	void, CopyTexSubImage3D,
	GLenum const, target,
	GLint const, level,
	GLint const, xoffset,
	GLint const, yoffset,
	GLint const, zoffset,
	GLint const, x,
	GLint const, y,
	GLsizei const, width,
	GLsizei const, height
	)

// void glCompressedTexImage3D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid* data)
GD_DEFINE_OGL_METHOD_9(
	void, CompressedTexImage3D,
	GLenum const, target,
	GLint const, level,
	GLenum const, internalformat,
	GLsizei const, width,
	GLsizei const, height,
	GLsizei const, depth,
	GLint const, border,
	GLsizei const, imageSize,
	const GLvoid* const, data
	)

// void glCompressedTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid* data)
GD_DEFINE_OGL_METHOD_11(
	void, CompressedTexSubImage3D,
	GLenum const, target,
	GLint const, level,
	GLint const, xoffset,
	GLint const, yoffset,
	GLint const, zoffset,
	GLsizei const, width,
	GLsizei const, height,
	GLsizei const, depth,
	GLenum const, format,
	GLsizei const, imageSize,
	const GLvoid* const, data
	)

// void glGenQueries(GLsizei n, GLuint* ids)
GD_DEFINE_OGL_METHOD_2(
	void, GenQueries,
	GLsizei const, n,
	GLuint* const, ids
	)

// void glDeleteQueries(GLsizei n, const GLuint* ids)
GD_DEFINE_OGL_METHOD_2(
	void, DeleteQueries,
	GLsizei const, n,
	const GLuint* const, ids
	)

// GLboolean glIsQuery(GLuint id)
GD_DEFINE_OGL_METHOD_1(
	GLboolean, IsQuery,
	GLuint const, id
	)

// void glBeginQuery(GLenum target, GLuint id)
GD_DEFINE_OGL_METHOD_2(
	void, BeginQuery,
	GLenum const, target,
	GLuint const, id
	)

// void glEndQuery(GLenum target)
GD_DEFINE_OGL_METHOD_1(
	void, EndQuery,
	GLenum const, target
	)

// void glGetQueryiv(GLenum target, GLenum pname, GLint* params)
GD_DEFINE_OGL_METHOD_3(
	void, GetQueryiv,
	GLenum const, target,
	GLenum const, pname,
	GLint* const, params
	)

// void glGetQueryObjectuiv(GLuint id, GLenum pname, GLuint* params)
GD_DEFINE_OGL_METHOD_3(
	void, GetQueryObjectuiv,
	GLuint const, id,
	GLenum const, pname,
	GLuint* const, params
	)

// GLboolean glUnmapBuffer(GLenum target)
GD_DEFINE_OGL_METHOD_1(
	GLboolean, UnmapBuffer,
	GLenum const, target
	)

// void glGetBufferPointerv(GLenum target, GLenum pname, GLvoid** params)
GD_DEFINE_OGL_METHOD_3(
	void, GetBufferPointerv,
	GLenum const, target,
	GLenum const, pname,
	GLvoid** const, params
	)

// void glDrawBuffers(GLsizei n, const GLenum* bufs)
GD_DEFINE_OGL_METHOD_2(
	void, DrawBuffers,
	GLsizei const, n,
	const GLenum* const, bufs
	)

// void glUniformMatrix2x3fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat* value)
GD_DEFINE_OGL_METHOD_4(
	void, UniformMatrix2x3fv,
	GLint const, location,
	GLsizei const, count,
	GLboolean const, transpose,
	const GLfloat* const, value
	)

// void glUniformMatrix3x2fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat* value)
GD_DEFINE_OGL_METHOD_4(
	void, UniformMatrix3x2fv,
	GLint const, location,
	GLsizei const, count,
	GLboolean const, transpose,
	const GLfloat* const, value
	)

// void glUniformMatrix2x4fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat* value)
GD_DEFINE_OGL_METHOD_4(
	void, UniformMatrix2x4fv,
	GLint const, location,
	GLsizei const, count,
	GLboolean const, transpose,
	const GLfloat* const, value
	)

// void glUniformMatrix4x2fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat* value)
GD_DEFINE_OGL_METHOD_4(
	void, UniformMatrix4x2fv,
	GLint const, location,
	GLsizei const, count,
	GLboolean const, transpose,
	const GLfloat* const, value
	)

// void glUniformMatrix3x4fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat* value)
GD_DEFINE_OGL_METHOD_4(
	void, UniformMatrix3x4fv,
	GLint const, location,
	GLsizei const, count,
	GLboolean const, transpose,
	const GLfloat* const, value
	)

// void glUniformMatrix4x3fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat* value)
GD_DEFINE_OGL_METHOD_4(
	void, UniformMatrix4x3fv,
	GLint const, location,
	GLsizei const, count,
	GLboolean const, transpose,
	const GLfloat* const, value
	)

// void glBlitFramebuffer(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter)
GD_DEFINE_OGL_METHOD_10(
	void, BlitFramebuffer,
	GLint const, srcX0,
	GLint const, srcY0,
	GLint const, srcX1,
	GLint const, srcY1,
	GLint const, dstX0,
	GLint const, dstY0,
	GLint const, dstX1,
	GLint const, dstY1,
	GLbitfield const, mask,
	GLenum const, filter
	)

// void glRenderbufferStorageMultisample(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height)
GD_DEFINE_OGL_METHOD_5(
	void, RenderbufferStorageMultisample,
	GLenum const, target,
	GLsizei const, samples,
	GLenum const, internalformat,
	GLsizei const, width,
	GLsizei const, height
	)

// void glFramebufferTextureLayer(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer)
GD_DEFINE_OGL_METHOD_5(
	void, FramebufferTextureLayer,
	GLenum const, target,
	GLenum const, attachment,
	GLuint const, texture,
	GLint const, level,
	GLint const, layer
	)

// GLvoid* glMapBufferRange(GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access)
GD_DEFINE_OGL_METHOD_4(
	GLvoid*, MapBufferRange,
	GLenum const, target,
	GLintptr const, offset,
	GLsizeiptr const, length,
	GLbitfield const, access
	)

// void glFlushMappedBufferRange(GLenum target, GLintptr offset, GLsizeiptr length)
GD_DEFINE_OGL_METHOD_3(
	void, FlushMappedBufferRange,
	GLenum const, target,
	GLintptr const, offset,
	GLsizeiptr const, length
	)

// void glBindVertexArray(GLuint array)
GD_DEFINE_OGL_METHOD_1(
	void, BindVertexArray,
	GLuint const, array
	)

// void glDeleteVertexArrays(GLsizei n, const GLuint* arrays)
GD_DEFINE_OGL_METHOD_2(
	void, DeleteVertexArrays,
	GLsizei const, n,
	const GLuint* const, arrays
	)

// void glGenVertexArrays(GLsizei n, GLuint* arrays)
GD_DEFINE_OGL_METHOD_2(
	void, GenVertexArrays,
	GLsizei const, n,
	GLuint* const, arrays
	)

// GLboolean glIsVertexArray(GLuint array)
GD_DEFINE_OGL_METHOD_1(
	GLboolean, IsVertexArray,
	GLuint const, array
	)

// void glGetIntegeri_v(GLenum target, GLuint index, GLint* data)
GD_DEFINE_OGL_METHOD_3(
	void, GetIntegeri_v,
	GLenum const, target,
	GLuint const, index,
	GLint* const, data
	)

// void glBeginTransformFeedback(GLenum primitiveMode)
GD_DEFINE_OGL_METHOD_1(
	void, BeginTransformFeedback,
	GLenum const, primitiveMode
	)

// void glEndTransformFeedback(void)
GD_DEFINE_OGL_METHOD_0(
	void, EndTransformFeedback
	)

// void glBindBufferRange(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size)
GD_DEFINE_OGL_METHOD_5(
	void, BindBufferRange,
	GLenum const, target,
	GLuint const, index,
	GLuint const, buffer,
	GLintptr const, offset,
	GLsizeiptr const, size
	)

// void glBindBufferBase(GLenum target, GLuint index, GLuint buffer)
GD_DEFINE_OGL_METHOD_3(
	void, BindBufferBase,
	GLenum const, target,
	GLuint const, index,
	GLuint const, buffer
	)

// void glTransformFeedbackVaryings(GLuint program, GLsizei count, const GLchar* const* varyings, GLenum bufferMode)
GD_DEFINE_OGL_METHOD_4(
	void, TransformFeedbackVaryings,
	GLuint const, program,
	GLsizei const, count,
	const GLchar* const* const, varyings,
	GLenum const, bufferMode
	)

// void glGetTransformFeedbackVarying(GLuint program, GLuint index, GLsizei bufSize, GLsizei* length, GLsizei* size, GLenum* type, GLchar* name)
GD_DEFINE_OGL_METHOD_7(
	void, GetTransformFeedbackVarying,
	GLuint const, program,
	GLuint const, index,
	GLsizei const, bufSize,
	GLsizei* const, length,
	GLsizei* const, size,
	GLenum* const, type,
	GLchar* const, name
	)

// void glVertexAttribIPointer(GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid* pointer)
GD_DEFINE_OGL_METHOD_5(
	void, VertexAttribIPointer,
	GLuint const, index,
	GLint const, size,
	GLenum const, type,
	GLsizei const, stride,
	const GLvoid* const, pointer
	)

// void glGetVertexAttribIiv(GLuint index, GLenum pname, GLint* params)
GD_DEFINE_OGL_METHOD_3(
	void, GetVertexAttribIiv,
	GLuint const, index,
	GLenum const, pname,
	GLint* const, params
	)

// void glGetVertexAttribIuiv(GLuint index, GLenum pname, GLuint* params)
GD_DEFINE_OGL_METHOD_3(
	void, GetVertexAttribIuiv,
	GLuint const, index,
	GLenum const, pname,
	GLuint* const, params
	)

// void glVertexAttribI4i(GLuint index, GLint x, GLint y, GLint z, GLint w)
GD_DEFINE_OGL_METHOD_5(
	void, VertexAttribI4i,
	GLuint const, index,
	GLint const, x,
	GLint const, y,
	GLint const, z,
	GLint const, w
	)

// void glVertexAttribI4ui(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w)
GD_DEFINE_OGL_METHOD_5(
	void, VertexAttribI4ui,
	GLuint const, index,
	GLuint const, x,
	GLuint const, y,
	GLuint const, z,
	GLuint const, w
	)

// void glVertexAttribI4iv(GLuint index, const GLint* v)
GD_DEFINE_OGL_METHOD_2(
	void, VertexAttribI4iv,
	GLuint const, index,
	const GLint* const, v
	)

// void glVertexAttribI4uiv(GLuint index, const GLuint* v)
GD_DEFINE_OGL_METHOD_2(
	void, VertexAttribI4uiv,
	GLuint const, index,
	const GLuint* const, v
	)

// void glGetUniformuiv(GLuint program, GLint location, GLuint* params)
GD_DEFINE_OGL_METHOD_3(
	void, GetUniformuiv,
	GLuint const, program,
	GLint const, location,
	GLuint* const, params
	)

// GLint glGetFragDataLocation(GLuint program, const GLchar *name)
GD_DEFINE_OGL_METHOD_2(
	GLint, GetFragDataLocation,
	GLuint const, program,
	const GLchar* const, name
	)

// void glUniform1ui(GLint location, GLuint v0)
GD_DEFINE_OGL_METHOD_2(
	void, Uniform1ui,
	GLint const, location,
	GLuint const, v0
	)

// void glUniform2ui(GLint location, GLuint v0, GLuint v1)
GD_DEFINE_OGL_METHOD_3(
	void, Uniform2ui,
	GLint const, location,
	GLuint const, v0,
	GLuint const, v1
	)

// void glUniform3ui(GLint location, GLuint v0, GLuint v1, GLuint v2)
GD_DEFINE_OGL_METHOD_4(
	void, Uniform3ui,
	GLint const, location,
	GLuint const, v0,
	GLuint const, v1,
	GLuint const, v2
	)

// void glUniform4ui(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3)
GD_DEFINE_OGL_METHOD_5(
	void, Uniform4ui,
	GLint const, location,
	GLuint const, v0,
	GLuint const, v1,
	GLuint const, v2,
	GLuint const, v3
	)

// void glUniform1uiv(GLint location, GLsizei count, const GLuint* value)
GD_DEFINE_OGL_METHOD_3(
	void, Uniform1uiv,
	GLint const, location,
	GLsizei const, count,
	const GLuint* const, value
	)

// void glUniform2uiv(GLint location, GLsizei count, const GLuint* value)
GD_DEFINE_OGL_METHOD_3(
	void, Uniform2uiv,
	GLint const, location,
	GLsizei const, count,
	const GLuint* const, value
	)

// void glUniform3uiv(GLint location, GLsizei count, const GLuint* value)
GD_DEFINE_OGL_METHOD_3(
	void, Uniform3uiv,
	GLint const, location,
	GLsizei const, count,
	const GLuint* const, value
	)

// void glUniform4uiv(GLint location, GLsizei count, const GLuint* value)
GD_DEFINE_OGL_METHOD_3(
	void, Uniform4uiv,
	GLint const, location,
	GLsizei const, count,
	const GLuint* const, value
	)

// void glClearBufferiv(GLenum buffer, GLint drawbuffer, const GLint* value)
GD_DEFINE_OGL_METHOD_3(
	void, ClearBufferiv,
	GLenum const, buffer,
	GLint const, drawbuffer,
	const GLint* const, value
	)

// void glClearBufferuiv(GLenum buffer, GLint drawbuffer, const GLuint* value)
GD_DEFINE_OGL_METHOD_3(
	void, ClearBufferuiv,
	GLenum const, buffer,
	GLint const, drawbuffer,
	const GLuint* const, value
	)

// void glClearBufferfv(GLenum buffer, GLint drawbuffer, const GLfloat* value)
GD_DEFINE_OGL_METHOD_3(
	void, ClearBufferfv,
	GLenum const, buffer,
	GLint const, drawbuffer,
	const GLfloat* const, value
	)

// void glClearBufferfi(GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil)
GD_DEFINE_OGL_METHOD_4(
	void, ClearBufferfi,
	GLenum const, buffer,
	GLint const, drawbuffer,
	GLfloat const, depth,
	GLint const, stencil
	)

// const GLubyte* glGetStringi(GLenum name, GLuint index)
GD_DEFINE_OGL_METHOD_2(
	const GLubyte*, GetStringi,
	GLenum const, name,
	GLuint const, index
	)

// void glCopyBufferSubData(GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size)
GD_DEFINE_OGL_METHOD_5(
	void, CopyBufferSubData,
	GLenum const, readTarget,
	GLenum const, writeTarget,
	GLintptr const, readOffset,
	GLintptr const, writeOffset,
	GLsizeiptr const, size
	)

// void glGetUniformIndices(GLuint program, GLsizei uniformCount, const GLchar* const* uniformNames, GLuint* uniformIndices)
GD_DEFINE_OGL_METHOD_4(
	void, GetUniformIndices,
	GLuint const, program,
	GLsizei const, uniformCount,
	const GLchar* const* const, uniformNames,
	GLuint* const, uniformIndices
	)

// void glGetActiveUniformsiv(GLuint program, GLsizei uniformCount, const GLuint* uniformIndices, GLenum pname, GLint* params)
GD_DEFINE_OGL_METHOD_5(
	void, GetActiveUniformsiv,
	GLuint const, program,
	GLsizei const, uniformCount,
	const GLuint* const, uniformIndices,
	GLenum const, pname,
	GLint* const, params
	)

// GLuint glGetUniformBlockIndex(GLuint program, const GLchar* uniformBlockName)
GD_DEFINE_OGL_METHOD_2(
	GLuint, GetUniformBlockIndex,
	GLuint const, program,
	const GLchar* const, uniformBlockName
	)

// void glGetActiveUniformBlockiv(GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint* params)
GD_DEFINE_OGL_METHOD_4(
	void, GetActiveUniformBlockiv,
	GLuint const, program,
	GLuint const, uniformBlockIndex,
	GLenum const, pname,
	GLint* const, params
	)

// void glGetActiveUniformBlockName(GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei* length, GLchar* uniformBlockName)
GD_DEFINE_OGL_METHOD_5(
	void, GetActiveUniformBlockName,
	GLuint const, program,
	GLuint const, uniformBlockIndex,
	GLsizei const, bufSize,
	GLsizei* const, length,
	GLchar* const, uniformBlockName
	)

// void glUniformBlockBinding(GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding)
GD_DEFINE_OGL_METHOD_3(
	void, UniformBlockBinding,
	GLuint const, program,
	GLuint const, uniformBlockIndex,
	GLuint const, uniformBlockBinding
	)

// void glDrawArraysInstanced(GLenum mode, GLint first, GLsizei count, GLsizei instanceCount)
GD_DEFINE_OGL_METHOD_4(
	void, DrawArraysInstanced,
	GLenum const, mode,
	GLint const, first,
	GLsizei const, count,
	GLsizei const, instanceCount
	)

// void glDrawElementsInstanced(GLenum mode, GLsizei count, GLenum type, const GLvoid* indices, GLsizei instanceCount)
GD_DEFINE_OGL_METHOD_5(
	void, DrawElementsInstanced,
	GLenum const, mode,
	GLsizei const, count,
	GLenum const, type,
	const GLvoid* const, indices,
	GLsizei const, instanceCount
	)

// GLsync glFenceSync(GLenum condition, GLbitfield flags)
GD_DEFINE_OGL_METHOD_2(
	GLsync, FenceSync,
	GLenum const, condition,
	GLbitfield const, flags
	)

// GLboolean glIsSync(GLsync sync)
GD_DEFINE_OGL_METHOD_1(
	GLboolean, IsSync,
	GLsync const, sync
	)

// void glDeleteSync(GLsync sync)
GD_DEFINE_OGL_METHOD_1(
	void, DeleteSync,
	GLsync const, sync
	)

// GLenum glClientWaitSync(GLsync sync, GLbitfield flags, GLuint64 timeout)
GD_DEFINE_OGL_METHOD_3(
	GLenum, ClientWaitSync,
	GLsync const, sync,
	GLbitfield const, flags,
	GLuint64 const, timeout
	)

// void glWaitSync(GLsync sync, GLbitfield flags, GLuint64 timeout)
GD_DEFINE_OGL_METHOD_3(
	void, WaitSync,
	GLsync const, sync,
	GLbitfield const, flags,
	GLuint64 const, timeout
	)

// void glGetInteger64v(GLenum pname, GLint64* params)
GD_DEFINE_OGL_METHOD_2(
	void, GetInteger64v,
	GLenum const, pname,
	GLint64* const, params
	)

// void glGetSynciv(GLsync sync, GLenum pname, GLsizei bufSize, GLsizei* length, GLint* values)
GD_DEFINE_OGL_METHOD_5(
	void, GetSynciv,
	GLsync const, sync,
	GLenum const, pname,
	GLsizei const, bufSize,
	GLsizei* const, length,
	GLint* const, values
	)

// void glGetInteger64i_v(GLenum target, GLuint index, GLint64* data)
GD_DEFINE_OGL_METHOD_3(
	void, GetInteger64i_v,
	GLenum const, target,
	GLuint const, index,
	GLint64* const, data
	)

// void glGetBufferParameteri64v(GLenum target, GLenum pname, GLint64* params)
GD_DEFINE_OGL_METHOD_3(
	void, GetBufferParameteri64v,
	GLenum const, target,
	GLenum const, pname,
	GLint64* const, params
	)

// void glGenSamplers(GLsizei count, GLuint* samplers)
GD_DEFINE_OGL_METHOD_2(
	void, GenSamplers,
	GLsizei const, count,
	GLuint* const, samplers
	)

// void glDeleteSamplers(GLsizei count, const GLuint* samplers)
GD_DEFINE_OGL_METHOD_2(
	void, DeleteSamplers,
	GLsizei const, count,
	const GLuint* const, samplers
	)

// GLboolean glIsSampler(GLuint sampler)
GD_DEFINE_OGL_METHOD_1(
	GLboolean, IsSampler,
	GLuint const, sampler
	)

// void glBindSampler(GLuint unit, GLuint sampler)
GD_DEFINE_OGL_METHOD_2(
	void, BindSampler,
	GLuint const, unit,
	GLuint const, sampler
	)

// void glSamplerParameteri(GLuint sampler, GLenum pname, GLint param)
GD_DEFINE_OGL_METHOD_3(
	void, SamplerParameteri,
	GLuint const, sampler,
	GLenum const, pname,
	GLint const, param
	)

// void glSamplerParameteriv(GLuint sampler, GLenum pname, const GLint* param)
GD_DEFINE_OGL_METHOD_3(
	void, SamplerParameteriv,
	GLuint const, sampler,
	GLenum const, pname,
	const GLint* const, param
	)

// void glSamplerParameterf(GLuint sampler, GLenum pname, GLfloat param)
GD_DEFINE_OGL_METHOD_3(
	void, SamplerParameterf,
	GLuint const, sampler,
	GLenum const, pname,
	GLfloat const, param
	)

// void glSamplerParameterfv(GLuint sampler, GLenum pname, const GLfloat* param)
GD_DEFINE_OGL_METHOD_3(
	void, SamplerParameterfv,
	GLuint const, sampler,
	GLenum const, pname,
	const GLfloat* const, param
	)

// void glGetSamplerParameteriv(GLuint sampler, GLenum pname, GLint* params)
GD_DEFINE_OGL_METHOD_3(
	void, GetSamplerParameteriv,
	GLuint const, sampler,
	GLenum const, pname,
	GLint* const, params
	)

// void glGetSamplerParameterfv(GLuint sampler, GLenum pname, GLfloat* params)
GD_DEFINE_OGL_METHOD_3(
	void, GetSamplerParameterfv,
	GLuint const, sampler,
	GLenum const, pname,
	GLfloat* const, params
	)

// void glVertexAttribDivisor(GLuint index, GLuint divisor)
GD_DEFINE_OGL_METHOD_2(
	void, VertexAttribDivisor,
	GLuint const, index,
	GLuint const, divisor
	)

// void glBindTransformFeedback(GLenum target, GLuint id)
GD_DEFINE_OGL_METHOD_2(
	void, BindTransformFeedback,
	GLenum const, target,
	GLuint const, id
	)

// void glDeleteTransformFeedbacks(GLsizei n, const GLuint* ids)
GD_DEFINE_OGL_METHOD_2(
	void, DeleteTransformFeedbacks,
	GLsizei const, n,
	const GLuint* const, ids
	)

// void glGenTransformFeedbacks(GLsizei n, GLuint* ids)
GD_DEFINE_OGL_METHOD_2(
	void, GenTransformFeedbacks,
	GLsizei const, n,
	GLuint* const, ids
	)

// GLboolean glIsTransformFeedback(GLuint id)
GD_DEFINE_OGL_METHOD_1(
	GLboolean, IsTransformFeedback,
	GLuint const, id
	)

// void glPauseTransformFeedback(void)
GD_DEFINE_OGL_METHOD_0(
	void, PauseTransformFeedback
	)

// void glResumeTransformFeedback(void)
GD_DEFINE_OGL_METHOD_0(
	void, ResumeTransformFeedback
	)

// void glGetProgramBinary(GLuint program, GLsizei bufSize, GLsizei* length, GLenum* binaryFormat, GLvoid* binary)
GD_DEFINE_OGL_METHOD_5(
	void, GetProgramBinary,
	GLuint const, program,
	GLsizei const, bufSize,
	GLsizei* const, length,
	GLenum* const, binaryFormat,
	GLvoid* const, binary
	)

// void glProgramBinary(GLuint program, GLenum binaryFormat, const GLvoid* binary, GLsizei length)
GD_DEFINE_OGL_METHOD_4(
	void, ProgramBinary,
	GLuint const, program,
	GLenum const, binaryFormat,
	const GLvoid* const, binary,
	GLsizei const, length
	)

// void glProgramParameteri(GLuint program, GLenum pname, GLint value)
GD_DEFINE_OGL_METHOD_3(
	void, ProgramParameteri,
	GLuint const, program,
	GLenum const, pname,
	GLint const, value
	)

// void glInvalidateFramebuffer(GLenum target, GLsizei numAttachments, const GLenum* attachments)
GD_DEFINE_OGL_METHOD_3(
	void, InvalidateFramebuffer,
	GLenum const, target,
	GLsizei const, numAttachments,
	const GLenum* const, attachments
	)

// void glInvalidateSubFramebuffer(GLenum target, GLsizei numAttachments, const GLenum* attachments, GLint x, GLint y, GLsizei width, GLsizei height)
GD_DEFINE_OGL_METHOD_7(
	void, InvalidateSubFramebuffer,
	GLenum const, target,
	GLsizei const, numAttachments,
	const GLenum* const, attachments,
	GLint const, x,
	GLint const, y,
	GLsizei const, width,
	GLsizei const, height
	)

// void glTexStorage2D(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height)
GD_DEFINE_OGL_METHOD_5(
	void, TexStorage2D,
	GLenum const, target,
	GLsizei const, levels,
	GLenum const, internalformat,
	GLsizei const, width,
	GLsizei const, height
	)

// void glTexStorage3D(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth)
GD_DEFINE_OGL_METHOD_6(
	void, TexStorage3D,
	GLenum const, target,
	GLsizei const, levels,
	GLenum const, internalformat,
	GLsizei const, width,
	GLsizei const, height,
	GLsizei const, depth
	)

// void glGetInternalformativ(GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint* params)
GD_DEFINE_OGL_METHOD_5(
	void, GetInternalformativ,
	GLenum const, target,
	GLenum const, internalformat,
	GLenum const, pname,
	GLsizei const, bufSize,
	GLint* const, params
	)

#undef GD_DEFINE_OGL_METHOD_0
#undef GD_DEFINE_OGL_METHOD_1
#undef GD_DEFINE_OGL_METHOD_2
#undef GD_DEFINE_OGL_METHOD_3
#undef GD_DEFINE_OGL_METHOD_4
#undef GD_DEFINE_OGL_METHOD_5
#undef GD_DEFINE_OGL_METHOD_6
#undef GD_DEFINE_OGL_METHOD_7
#undef GD_DEFINE_OGL_METHOD_8
#undef GD_DEFINE_OGL_METHOD_9
#undef GD_DEFINE_OGL_METHOD_10
#undef GD_DEFINE_OGL_METHOD_11
#undef GD_DEFINE_OGL_METHOD_GLUE_ARGS
#undef GD_DEFINE_OGL_METHOD
