/// ==========================================================================================
/// Validator.h: shader validator and description generator interface.
/// Copyright (C) Goddamn Industries 2011 - 2015. All Rights Reserved.
/// 
/// History:
///		* 17.05.2014 - Created by James Jhuighuy
/// ==========================================================================================

#pragma once
#ifndef GD_ENGINE_RENDERER_SHADER_CROSS_COMPILER_VALIDATOR
#define GD_ENGINE_RENDERER_SHADER_CROSS_COMPILER_VALIDATOR

#include <GoddamnEngine/Include.h>
#include <GoddamnEngine/Core/Compilers/Toolchain/Toolchain.h>
#include <GoddamnEngine/Engine/Renderer/Shader/Shader.h>

#if (!defined(GD_PLATFORM_DESKTOP))
#	error "This API can be used on desktop platfroms only."
#endif	// if (!defined(GD_PLATFORM_DESKTOP))

GD_NAMESPACE_BEGIN

	struct HLSLScope;
	struct HLSLExprColon;

	/// Provides validation of data, generated by HLSLParser, and generation of shader instance description using it.
	class HLSLValidator final : public IToolchainTool
	{
	public:
		GDINL  HLSLValidator(IToolchain* const Toolchain) : IToolchainTool(Toolchain) { }
		GDINL ~HLSLValidator(         ) { }
		
		/// Generates shader instance description using data generated by HLSLParser.
		/// @param Shader  Shader for which description would be generated.
		/// @param ParsedData Parsed data of specifed shader.
		/// @param EntryName  Name of entry point function
		/// @returns Generated decription from parsed shader data or nullptr if error occurs.
		GDAPI HRIShaderInstanceDesc* ValidateAndGenerateDescription(HLSLScope const* const ParsedData, String const& EntryName);

	private:
		GDINT void ValidateResourceParameters(HLSLScope const* const ParsedData, HRIShaderInstanceDesc* const ShaderInstanceDesc);
		GDINT void ValidateConstantBuffersParameters(HLSLScope const* const ParsedData, HRIShaderInstanceDesc* const ShaderInstanceDesc);
		GDINT void ValidateEntryPoint(HLSLScope const* const ParsedData, String const& EntryName, RefPtr<HRIShaderInstanceDesc>& ShaderInstanceDesc);
		GDINT void ValidateEntryPointArgumentExprColon(HLSLExprColon const* const ExprColon, UInt64& ShaderSemanticsList);
	};	// class HRIShaderInstanceDescGenerator

GD_NAMESPACE_END

#endif